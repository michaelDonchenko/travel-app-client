{"version":3,"sources":["redux/api/map.js","redux/actions/markerActions.js","redux/reducers/mapSlice.js","redux/reducers/modalSlice.js","redux/api/auth.js","redux/actions/authActions.js","redux/reducers/authSlice.js","redux/api/cloudinary.js","redux/actions/cloudinaryActions.js","redux/reducers/cloudinarySlice.js","redux/store.js","components/snackBars/SuccessMessage.jsx","components/snackBars/ErrorMessage.jsx","components/MapMarker.jsx","styles.js","components/NewMarkerPopup.jsx","styled.js","components/ResetPasswordForm.jsx","components/modals/ModalToolbar.jsx","components/modals/Login.jsx","components/modals/Register.jsx","components/modals/styles.js","components/Comment.jsx","components/tabs/CommentForm.jsx","components/tabs/ImagesUpload.jsx","components/tabs/AddRating.jsx","components/Tabs.jsx","components/modals/PinModel.jsx","components/snackBars/MapErrorMessage.jsx","components/snackBars/CloudinaryErrorMessage.jsx","components/modals/About.jsx","Map.jsx","theme.js","pages/PasswordReset.jsx","App.jsx","index.js"],"names":["axios","defaults","withCredentials","server_url","process","fetchPins","async","get","createNewPin","createAsyncThunk","obj","rejectWithValue","data","post","createPin","error","response","getPins","console","log","message","getPin","id","fetchPin","getComments","pinId","fetchComments","createComment","addComment","removeComment","delete","commentId","deleteComment","getRating","fetchRating","addRating","Rate","removeMarker","deleteMarker","initialState","viewport","width","height","latitude","longitude","zoom","transitionInterpolator","transitionDuration","windowWidth","window","innerWidth","markers","currentMarker","loading","success","currentPin","comments","rating","mapSlice","createSlice","name","reducers","setCurrentMarker","state","payload","setViewport","setPinId","resetPinId","resetError","windowResizer","extraReducers","pending","fulfilled","rejected","pins","pin","ratings","actions","mapState","map","modalSlice","loginModal","registerModal","aboutModal","openLoginModal","closeLoginModal","openRegisterModal","closeRegisterModal","openAboutModal","closeAboutModal","modalState","modal","login","loginUser","register","registerUser","logout","logoutUser","getForgotPassword","email","forgotPassword","resetPasswordValidation","token","resetPasswordValidator","createResetPassword","resetPasswordAction","cookies","Cookies","user","resetPasswordSuccess","resetPasswordError","authSlice","resetMessage","errors","msg","authState","auth","addImages","uploadImages","getImages","getPinImages","removeImage","deleteImage","cloudinarySlice","images","returnError","pinImages","cloudinaryState","cloudinary","store","configureStore","reducer","mapReducer","modalReducer","authReducer","cloudinaryReducer","SuccessMessage","useSelector","dispatch","useDispatch","Snackbar","open","autoHideDuration","onClose","Alert","severity","ErrorMessage","MapMarker","long","lat","marker","viewportOBJ","onClick","setTimeout","_id","offsetLeft","offsetTop","Tooltip","title","placeName","style","fontSize","color","cursor","styles","makeStyles","theme","toolBar","minHeight","menuButton","margin","display","fontWeight","mapPopup","padding","spacing","popupButton","inputField","maxWidth","flexCenter","flexDirection","justifyContent","modalLink","textDecoration","backdrop","zIndex","drawer","NewMarkerPopup","classes","handleClose","setPlaceName","useState","className","anchor","closeOnClick","onSubmit","e","preventDefault","TextField","label","type","values","onChange","target","value","Button","variant","StyledButton","styled","button","props","primary","FlexDiv","div","HiddenDiv","Number","number","Icon","svg","HiddenForm","show","ResetPasswordForm","setEmail","fullWidth","ModalToolbar","handleClsoe","Toolbar","IconButton","edge","aria-label","Login","modals","setValues","username","password","showPasswordReset","setShowPasswordReset","handleChange","set","Dialog","fullScreen","DialogTitle","Typography","align","Register","commentsDiv","maxHeight","overflowY","imagesDiv","flexWrap","imgDiv","img","badge","position","marginRight","header","Comment","comment","body","postedBy","createdAt","createdBy","Paper","marginBottom","elevation","moment","format","confirm","CommentForm","setComment","placeholder","ImagesUpload","files","setFiles","dispatchImageUpload","image","uri","length","i","Resizer","imageFileResizer","accept","multiple","AddRating","setRating","FormControl","InputLabel","Select","labelId","MenuItem","TabsMenu","setValue","handleClick","Divider","PinModel","loadingImages","useEffect","ratingAverage","r","reduce","accumulator","currentValue","Backdrop","CircularProgress","alignItems","flex","Rating","toFixed","readOnly","precision","marginLeft","float","role","src","url","Badge","public_id","badgeContent","c","Tabs","MapErrorMessage","CloudinaryErrorMessage","About","marginTop","Map","authLoading","mapLoading","onDblClick","lngLat","handleNewClick","mapboxApiAccessToken","mapStyle","onViewportChange","nextViewport","m","remove","endIcon","createMuiTheme","palette","main","secondary","PasswordReset","params","useParams","setvalues","confirmPassword","Container","resetPasswordToken","displayError","displaySuccess","App","handleResize","addEventListener","removeEventListener","ThemeProvider","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56dfca37.chunk.js","sourcesContent":["import axios from 'axios'\r\naxios.defaults.withCredentials = true\r\nconst server_url = process.env.REACT_APP_SERVER_URL\r\n\r\nexport const createPin = async (obj) =>\r\n  await axios.post(`${server_url}/create-pin`, obj)\r\n\r\nexport const fetchPins = async () => await axios.get(`${server_url}/get-pins`)\r\n\r\nexport const fetchPin = async (id) =>\r\n  await axios.get(`${server_url}/get-pin/${id}`)\r\n\r\nexport const fetchComments = async (pinId) =>\r\n  await axios.get(`${server_url}/get-comments/${pinId}`)\r\n\r\nexport const addComment = async (obj) =>\r\n  await axios.post(`${server_url}/add-comment`, obj)\r\n\r\nexport const deleteComment = async (obj) =>\r\n  await axios.delete(\r\n    `${server_url}/delete-comment/${obj.pinId}/${obj.commentId}`\r\n  )\r\n\r\nexport const fetchRating = async (pinId) =>\r\n  await axios.get(`${server_url}/get-rating/${pinId}`)\r\n\r\nexport const Rate = async (obj) =>\r\n  await axios.post(`${server_url}/add-rating`, obj)\r\n\r\nexport const deleteMarker = async (id) =>\r\n  await axios.delete(`${server_url}/delete-pin/${id}`)\r\n","import { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport {\r\n  addComment,\r\n  createPin,\r\n  fetchComments,\r\n  fetchPin,\r\n  fetchPins,\r\n  deleteComment,\r\n  fetchRating,\r\n  Rate,\r\n  deleteMarker,\r\n} from '../api/map'\r\n\r\nexport const createNewPin = createAsyncThunk(\r\n  'map/createNewPin',\r\n  async (obj, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await createPin(obj)\r\n      return data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const getPins = createAsyncThunk('map/getPins', async () => {\r\n  try {\r\n    const { data } = await fetchPins()\r\n    return data\r\n  } catch (error) {\r\n    console.log(error.response.data.message)\r\n  }\r\n})\r\n\r\nexport const getPin = createAsyncThunk(\r\n  'map/getPin',\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await fetchPin(id)\r\n      return data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const getComments = createAsyncThunk(\r\n  'map/getComments',\r\n  async (pinId, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await fetchComments(pinId)\r\n      return data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const createComment = createAsyncThunk(\r\n  'map/createComment',\r\n  async (obj, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await addComment(obj)\r\n      return data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const removeComment = createAsyncThunk(\r\n  'map/removeComment',\r\n  async (obj, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await deleteComment(obj)\r\n      return data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const getRating = createAsyncThunk(\r\n  'map/getRating',\r\n  async (pinId, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await fetchRating(pinId)\r\n      return data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const addRating = createAsyncThunk(\r\n  'map/addRating',\r\n  async (obj, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await Rate(obj)\r\n      return data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const removeMarker = createAsyncThunk(\r\n  'map/removeMarker',\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      await deleteMarker(id)\r\n      const { data } = await fetchPins()\r\n      return data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport {\r\n  createNewPin,\r\n  getPins,\r\n  getPin,\r\n  getComments,\r\n  createComment,\r\n  removeComment,\r\n  getRating,\r\n  addRating,\r\n  removeMarker,\r\n} from '../actions/markerActions'\r\n\r\nconst initialState = {\r\n  viewport: {\r\n    width: '100%',\r\n    height: '100vh',\r\n    latitude: 42.526,\r\n    longitude: 15.2551,\r\n    zoom: 4,\r\n    transitionInterpolator: '',\r\n    transitionDuration: '',\r\n  },\r\n  windowWidth: window.innerWidth,\r\n  markers: [],\r\n  currentMarker: null,\r\n  loading: false,\r\n  error: false,\r\n  success: true,\r\n  pinId: null,\r\n  currentPin: null,\r\n  comments: [],\r\n  rating: [],\r\n}\r\n\r\nexport const mapSlice = createSlice({\r\n  name: 'map',\r\n  initialState,\r\n  reducers: {\r\n    setCurrentMarker: (state, { payload }) => {\r\n      state.currentMarker = payload\r\n    },\r\n    setViewport: (state, { payload }) => {\r\n      state.viewport.latitude = payload.latitude\r\n      state.viewport.longitude = payload.longitude\r\n      state.viewport.zoom = payload.zoom\r\n      state.viewport.transitionInterpolator =\r\n        payload.transitionInterpolator || ''\r\n      state.viewport.transitionDuration = payload.transitionDuration || ''\r\n    },\r\n    setPinId: (state, { payload }) => {\r\n      state.pinId = payload\r\n    },\r\n    resetPinId: (state, { payload }) => {\r\n      state.pinId = null\r\n    },\r\n    resetError: (state, { payload }) => {\r\n      state.error = null\r\n    },\r\n    windowResizer: (state, { payload }) => {\r\n      state.windowWidth = payload\r\n    },\r\n  },\r\n  extraReducers: {\r\n    //create new pin\r\n    [createNewPin.pending]: (state, { payload }) => {\r\n      state.loading = true\r\n    },\r\n    [createNewPin.fulfilled]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.success = true\r\n      state.error = false\r\n    },\r\n    [createNewPin.rejected]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.error = payload.message\r\n    },\r\n\r\n    //get pins\r\n    [getPins.pending]: (state, { payload }) => {\r\n      state.loading = true\r\n    },\r\n    [getPins.fulfilled]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.markers = payload.pins\r\n    },\r\n    [getPins.rejected]: (state, { payload }) => {\r\n      state.loading = true\r\n      state.error = payload\r\n      state.markers = []\r\n    },\r\n\r\n    //get pin\r\n    [getPin.pending]: (state, { payload }) => {\r\n      state.loading = true\r\n    },\r\n    [getPin.fulfilled]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.currentPin = payload.pin\r\n    },\r\n    [getPin.rejected]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.error = payload.message\r\n    },\r\n\r\n    //get comments\r\n    [getComments.pending]: (state, { payload }) => {\r\n      state.loading = true\r\n    },\r\n    [getComments.fulfilled]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.comments = payload.comments.comments\r\n    },\r\n    [getComments.rejected]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.error = payload.message\r\n    },\r\n\r\n    //create new comment\r\n    [createComment.pending]: (state, { payload }) => {\r\n      state.loading = true\r\n    },\r\n    [createComment.fulfilled]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.comments = payload.comments.comments\r\n    },\r\n    [createComment.rejected]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.error = payload.message\r\n    },\r\n\r\n    //create new comment\r\n    [removeComment.pending]: (state, { payload }) => {\r\n      state.loading = true\r\n    },\r\n    [removeComment.fulfilled]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.comments = payload.comments.comments\r\n    },\r\n    [removeComment.rejected]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.error = payload.message\r\n    },\r\n\r\n    //get rating\r\n    [getRating.pending]: (state, { payload }) => {\r\n      state.loading = true\r\n    },\r\n    [getRating.fulfilled]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.rating = payload.rating.ratings\r\n    },\r\n    [getRating.rejected]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.error = payload.message\r\n    },\r\n\r\n    //add rating\r\n    [addRating.pending]: (state, { payload }) => {\r\n      state.loading = true\r\n    },\r\n    [addRating.fulfilled]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.rating = payload.rating.ratings\r\n    },\r\n    [addRating.rejected]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.error = payload.message\r\n    },\r\n\r\n    //remove marker\r\n    //add rating\r\n    [removeMarker.pending]: (state, { payload }) => {\r\n      state.loading = true\r\n    },\r\n    [removeMarker.fulfilled]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.markers = payload.pins\r\n    },\r\n    [removeMarker.rejected]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.error = payload.message\r\n    },\r\n  },\r\n})\r\n\r\nexport const {\r\n  setCurrentMarker,\r\n  setViewport,\r\n  setPinId,\r\n  resetPinId,\r\n  resetError,\r\n  windowResizer,\r\n} = mapSlice.actions\r\n\r\n//selectors\r\nexport const mapState = (state) => state.map\r\nexport const currentMarkerSelector = (state) => state.map.currentMarker\r\n\r\nexport default mapSlice.reducer\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n  loginModal: false,\r\n  registerModal: false,\r\n  aboutModal: false,\r\n}\r\n\r\nexport const modalSlice = createSlice({\r\n  name: 'modal',\r\n  initialState,\r\n  reducers: {\r\n    openLoginModal: (state, { payload }) => {\r\n      state.loginModal = true\r\n    },\r\n    closeLoginModal: (state) => {\r\n      state.loginModal = false\r\n    },\r\n\r\n    openRegisterModal: (state, { payload }) => {\r\n      state.registerModal = true\r\n    },\r\n    closeRegisterModal: (state) => {\r\n      state.registerModal = false\r\n    },\r\n\r\n    openAboutModal: (state, { payload }) => {\r\n      state.aboutModal = true\r\n    },\r\n    closeAboutModal: (state) => {\r\n      state.aboutModal = false\r\n    },\r\n  },\r\n  extraReducers: {},\r\n})\r\n\r\nexport const {\r\n  openLoginModal,\r\n  openRegisterModal,\r\n  closeLoginModal,\r\n  closeRegisterModal,\r\n  openAboutModal,\r\n  closeAboutModal,\r\n} = modalSlice.actions\r\n\r\nexport const modalState = (state) => state.modal\r\nexport default modalSlice.reducer\r\n","import axios from 'axios'\r\naxios.defaults.withCredentials = true\r\nconst server_url = process.env.REACT_APP_SERVER_URL\r\n\r\nexport const loginUser = async (obj) =>\r\n  await axios.post(`${server_url}/login`, obj)\r\n\r\nexport const registerUser = async (obj) =>\r\n  await axios.post(`${server_url}/register`, obj)\r\n\r\nexport const logoutUser = async () => await axios.post(`${server_url}/logout`)\r\n\r\nexport const forgotPassword = async (email) =>\r\n  await axios.post(`${server_url}/forgot-password`, { email })\r\n\r\nexport const resetPasswordValidator = async (token) =>\r\n  await axios.get(`${server_url}/password-reset-validation/${token}`)\r\n\r\nexport const resetPasswordAction = async (obj) =>\r\n  await axios.post(`${server_url}/password-reset-action`, obj)\r\n","import { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport {\r\n  forgotPassword,\r\n  loginUser,\r\n  logoutUser,\r\n  registerUser,\r\n  resetPasswordAction,\r\n  resetPasswordValidator,\r\n} from '../api/auth'\r\n\r\nexport const login = createAsyncThunk(\r\n  'auth/login',\r\n  async (obj, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await loginUser(obj)\r\n      return data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const register = createAsyncThunk(\r\n  'auth/register',\r\n  async (obj, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await registerUser(obj)\r\n      return data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const logout = createAsyncThunk(\r\n  'auth/logout',\r\n  async (obj, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await logoutUser()\r\n      return data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const getForgotPassword = createAsyncThunk(\r\n  'auth/getForgotPassword',\r\n  async (email, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await forgotPassword(email)\r\n      return data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const resetPasswordValidation = createAsyncThunk(\r\n  'auth/resetPasswordValidation',\r\n  async (token, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await resetPasswordValidator(token)\r\n      return data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const createResetPassword = createAsyncThunk(\r\n  'auth/createResetPassword',\r\n  async (obj, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await resetPasswordAction(obj)\r\n      return data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport {\r\n  getForgotPassword,\r\n  login,\r\n  logout,\r\n  register,\r\n  resetPasswordValidation,\r\n  createResetPassword,\r\n} from '../actions/authActions'\r\nimport Cookies from 'universal-cookie'\r\n\r\nconst cookies = new Cookies()\r\n\r\nconst initialState = {\r\n  user: cookies.get('user') ? cookies.get('user') : null,\r\n  loading: false,\r\n  error: null,\r\n  message: null,\r\n  resetPasswordSuccess: null,\r\n  resetPasswordError: null,\r\n}\r\n\r\nexport const authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    resetMessage: (state) => {\r\n      state.message = null\r\n    },\r\n    resetError: (state) => {\r\n      state.error = null\r\n    },\r\n  },\r\n  extraReducers: {\r\n    //login\r\n    [login.pending]: (state, { payload }) => {\r\n      state.loading = true\r\n    },\r\n    [login.fulfilled]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.user = payload.user\r\n      state.message = payload.message\r\n      payload.error = null\r\n    },\r\n    [login.rejected]: (state, { payload }) => {\r\n      state.loading = false\r\n      payload.errors\r\n        ? (state.error = payload.errors[0].msg)\r\n        : (state.error = payload.message)\r\n    },\r\n\r\n    //logout\r\n    [logout.pending]: (state, { payload }) => {\r\n      state.loading = true\r\n    },\r\n    [logout.fulfilled]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.message = payload.message\r\n      state.user = null\r\n      payload.error = null\r\n    },\r\n    [logout.rejected]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.error = payload\r\n    },\r\n\r\n    //register\r\n    [register.pending]: (state, { payload }) => {\r\n      state.loading = true\r\n    },\r\n    [register.fulfilled]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.message = payload.message\r\n      payload.error = null\r\n    },\r\n    [register.rejected]: (state, { payload }) => {\r\n      state.loading = false\r\n      payload.errors\r\n        ? (state.error = payload.errors[0].msg)\r\n        : (state.error = payload.message)\r\n    },\r\n\r\n    //get forgot password\r\n    [getForgotPassword.pending]: (state, { payload }) => {\r\n      state.loading = true\r\n    },\r\n    [getForgotPassword.fulfilled]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.message = payload.message\r\n      payload.error = null\r\n    },\r\n    [getForgotPassword.rejected]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.error = payload.message\r\n    },\r\n\r\n    //reset passsword validation\r\n    [resetPasswordValidation.pending]: (state, { payload }) => {\r\n      state.loading = true\r\n    },\r\n    [resetPasswordValidation.fulfilled]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.resetPasswordSuccess = payload.message\r\n      payload.resetPasswordError = null\r\n    },\r\n    [resetPasswordValidation.rejected]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.resetPasswordError = payload.message\r\n    },\r\n\r\n    //create passsword reset\r\n    [createResetPassword.pending]: (state, { payload }) => {\r\n      state.loading = true\r\n    },\r\n    [createResetPassword.fulfilled]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.message = payload.message\r\n      payload.error = null\r\n    },\r\n    [createResetPassword.rejected]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.error = payload.message\r\n    },\r\n  },\r\n})\r\n\r\nexport const { resetMessage, resetError } = authSlice.actions\r\n\r\nexport const authState = (state) => state.auth\r\nexport default authSlice.reducer\r\n","import axios from 'axios'\r\naxios.defaults.withCredentials = true\r\nconst server_url = process.env.REACT_APP_SERVER_URL\r\n\r\nexport const uploadImages = async (obj) =>\r\n  await axios.post(`${server_url}/upload-images`, obj)\r\n\r\nexport const getPinImages = async (obj) =>\r\n  await axios.get(`${server_url}/get-images/${obj}`)\r\n\r\nexport const deleteImage = async (obj) =>\r\n  await axios.delete(`${server_url}/delete-image`, { data: obj })\r\n","import { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { deleteImage, getPinImages, uploadImages } from '../api/cloudinary'\r\n\r\nexport const addImages = createAsyncThunk(\r\n  'auth/addImages',\r\n  async (obj, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await uploadImages(obj)\r\n      return data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const getImages = createAsyncThunk(\r\n  'auth/getImages',\r\n  async (obj, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await getPinImages(obj)\r\n      return data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const removeImage = createAsyncThunk(\r\n  'auth/removeImage',\r\n  async (obj, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await deleteImage(obj)\r\n      return data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { addImages, getImages, removeImage } from '../actions/cloudinaryActions'\r\n\r\nconst initialState = {\r\n  images: [],\r\n  loading: false,\r\n  error: false,\r\n}\r\n\r\nexport const cloudinarySlice = createSlice({\r\n  name: 'cloudinary',\r\n  initialState,\r\n  reducers: {\r\n    returnError: (state, { payload }) => {\r\n      state.error = payload\r\n    },\r\n    resetError: (state, { payload }) => {\r\n      state.error = null\r\n    },\r\n  },\r\n  extraReducers: {\r\n    //create new image\r\n    [addImages.pending]: (state, { payload }) => {\r\n      state.loading = true\r\n    },\r\n    [addImages.fulfilled]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.images = payload.pinImages.images\r\n      state.error = false\r\n    },\r\n    [addImages.rejected]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.error = payload.message\r\n    },\r\n\r\n    //get pin images\r\n    [getImages.pending]: (state, { payload }) => {\r\n      state.loading = true\r\n    },\r\n    [getImages.fulfilled]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.images = payload.pinImages.images ? payload.pinImages.images : []\r\n      state.error = false\r\n    },\r\n    [getImages.rejected]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.error = payload.message\r\n    },\r\n\r\n    //remove iamge\r\n    [removeImage.pending]: (state, { payload }) => {\r\n      state.loading = true\r\n    },\r\n    [removeImage.fulfilled]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.images = payload.pinImages.images\r\n      state.error = false\r\n    },\r\n    [removeImage.rejected]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.error = payload.message\r\n    },\r\n  },\r\n})\r\n\r\nexport const { returnError, resetError } = cloudinarySlice.actions\r\n\r\nexport const cloudinaryState = (state) => state.cloudinary\r\nexport default cloudinarySlice.reducer\r\n","import { configureStore } from '@reduxjs/toolkit'\nimport mapReducer from './reducers/mapSlice'\nimport modalReducer from './reducers/modalSlice'\nimport authReducer from './reducers/authSlice'\nimport cloudinaryReducer from './reducers/cloudinarySlice'\n\nexport const store = configureStore({\n  reducer: {\n    map: mapReducer,\n    modal: modalReducer,\n    auth: authReducer,\n    cloudinary: cloudinaryReducer,\n  },\n})\n","import { Snackbar } from '@material-ui/core'\r\nimport React from 'react'\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { authState, resetMessage } from '../../redux/reducers/authSlice'\r\n\r\nconst SuccessMessage = () => {\r\n  const auth = useSelector(authState)\r\n  const { message } = auth\r\n  const dispatch = useDispatch()\r\n  return (\r\n    <Snackbar\r\n      open={message}\r\n      autoHideDuration={6000}\r\n      onClose={() => {\r\n        dispatch(resetMessage())\r\n      }}\r\n    >\r\n      <Alert\r\n        onClose={() => {\r\n          dispatch(resetMessage())\r\n        }}\r\n        severity='success'\r\n      >\r\n        {message}\r\n      </Alert>\r\n    </Snackbar>\r\n  )\r\n}\r\n\r\nexport default SuccessMessage\r\n","import { Snackbar } from '@material-ui/core'\r\nimport React from 'react'\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { authState, resetError } from '../../redux/reducers/authSlice'\r\n\r\nconst ErrorMessage = () => {\r\n  const auth = useSelector(authState)\r\n  const { error } = auth\r\n  const dispatch = useDispatch()\r\n\r\n  return (\r\n    <Snackbar\r\n      open={error}\r\n      autoHideDuration={6000}\r\n      onClose={() => dispatch(resetError())}\r\n    >\r\n      <Alert onClose={() => dispatch(resetError())} severity='error'>\r\n        {error}\r\n      </Alert>\r\n    </Snackbar>\r\n  )\r\n}\r\n\r\nexport default ErrorMessage\r\n","import RoomIcon from '@material-ui/icons/Room'\r\nimport { Marker, FlyToInterpolator } from 'react-map-gl'\r\nimport { Tooltip } from '@material-ui/core'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setPinId, setViewport } from '../redux/reducers/mapSlice'\r\n\r\nconst MapMarker = ({ viewport, long, lat, marker }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  let viewportOBJ = {\r\n    latitude: lat,\r\n    longitude: long,\r\n    zoom: 11,\r\n    // transitionInterpolator: new FlyToInterpolator({ speed: 1.2 }),\r\n    transitionDuration: 1000,\r\n  }\r\n\r\n  const handleClick = async () => {\r\n    await dispatch(setViewport(viewportOBJ))\r\n    setTimeout(() => dispatch(setPinId(marker._id)), 1200)\r\n  }\r\n\r\n  return (\r\n    <Marker\r\n      onClick={handleClick}\r\n      latitude={lat}\r\n      longitude={long}\r\n      offsetLeft={-3.5 * viewport.zoom}\r\n      offsetTop={-7 * viewport.zoom}\r\n    >\r\n      <Tooltip title={marker?.placeName}>\r\n        <RoomIcon\r\n          style={{\r\n            fontSize: viewport.zoom * 7,\r\n            color: 'crimson',\r\n            cursor: 'pointer',\r\n          }}\r\n        />\r\n      </Tooltip>\r\n    </Marker>\r\n  )\r\n}\r\n\r\nexport default MapMarker\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nconst styles = makeStyles((theme) => ({\r\n  toolBar: {\r\n    minHeight: '40px',\r\n  },\r\n\r\n  menuButton: {\r\n    margin: '1rem',\r\n    display: 'flex',\r\n    width: '150px',\r\n    fontWeight: '600',\r\n    fontSize: '1rem',\r\n  },\r\n\r\n  mapPopup: {\r\n    padding: theme.spacing(2),\r\n  },\r\n\r\n  popupButton: {\r\n    margin: theme.spacing(2, 'auto'),\r\n    padding: theme.spacing(1, 3),\r\n    display: 'flex',\r\n    width: 'fit-content',\r\n    fontWeight: '600',\r\n    fontSize: '1rem',\r\n  },\r\n\r\n  inputField: {\r\n    width: '350px',\r\n    margin: theme.spacing(2, 'auto'),\r\n    maxWidth: '90%',\r\n  },\r\n\r\n  flexCenter: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n  },\r\n\r\n  modalLink: {\r\n    color: '#263238',\r\n    fontWeight: '600',\r\n    margin: theme.spacing(0, 1),\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}))\r\n\r\nexport default styles\r\n","import { Button, TextField } from '@material-ui/core'\r\nimport { useState } from 'react'\r\nimport { Popup } from 'react-map-gl'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setCurrentMarker } from '../redux/reducers/mapSlice'\r\nimport styles from '../styles'\r\nimport { getPins, createNewPin } from '../redux/actions/markerActions'\r\n\r\nconst NewMarkerPopup = ({ long, lat }) => {\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n\r\n  const handleClose = () => {\r\n    dispatch(setCurrentMarker(null))\r\n  }\r\n\r\n  const [placeName, setPlaceName] = useState('')\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    await dispatch(createNewPin({ long, lat, placeName }))\r\n    handleClose()\r\n    setPlaceName('')\r\n    await dispatch(getPins())\r\n  }\r\n  return (\r\n    <Popup\r\n      className={classes.mapPopup}\r\n      anchor='left'\r\n      latitude={lat}\r\n      longitude={long}\r\n      closeOnClick={false}\r\n      onClose={() => {\r\n        handleClose()\r\n      }}\r\n    >\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField\r\n          label='Place name'\r\n          type='text'\r\n          values={placeName}\r\n          onChange={(e) => setPlaceName(e.target.value)}\r\n        />\r\n        <Button\r\n          className={classes.popupButton}\r\n          type='submit'\r\n          variant='contained'\r\n          color='primary'\r\n        >\r\n          Submit\r\n        </Button>\r\n      </form>\r\n    </Popup>\r\n  )\r\n}\r\n\r\nexport default NewMarkerPopup\r\n","import styled from 'styled-components'\r\n\r\nexport const StyledButton = styled.button`\r\n  background-color: white;\r\n  color: ${(props) => (props.primary ? 'Black' : 'Crimson')};\r\n  font-size: 1em;\r\n  margin: 1em;\r\n  padding: 0.25em 1em;\r\n  border: 2px solid ${(props) => (props.primary ? 'Black' : 'Crimson')};\r\n  border-radius: 3px;\r\n  width: 150px;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    background: ${(props) => (props.primary ? 'Black' : 'Crimson')};\r\n    color: white;\r\n  }\r\n`\r\n\r\nexport const FlexDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nexport const HiddenDiv = styled.div`\r\n  display: ${(props) =>\r\n    Number(props.value) === props.number ? 'flex' : 'none'};\r\n  margin: 10px 0;\r\n  padding: 10px;\r\n`\r\n\r\nexport const Icon = styled.svg`\r\n  color: ${(props) => props.color};\r\n  height: 20px;\r\n  width: 20px;\r\n  float: right;\r\n  margin: 0 5px;\r\n  &:hover {\r\n    cursor: pointer;\r\n    background-color: azure;\r\n  }\r\n`\r\n\r\nexport const HiddenForm = styled.div`\r\n  display: ${(props) => (props.show ? 'flex' : 'none')};\r\n  margin: 10px 0;\r\n  padding: 10px;\r\n  flex-direction: column;\r\n`\r\n","import { TextField } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport { HiddenForm, StyledButton } from '../styled'\r\nimport styles from '../styles'\r\nimport { useDispatch } from 'react-redux'\r\nimport { getForgotPassword } from '../redux/actions/authActions'\r\n\r\nconst ResetPasswordForm = ({ show }) => {\r\n  const [email, setEmail] = useState()\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    dispatch(getForgotPassword(email))\r\n  }\r\n\r\n  return (\r\n    <HiddenForm show={show}>\r\n      <p style={{ padding: '10px', color: 'gray' }}>\r\n        Type your email in order to get password reset link\r\n      </p>\r\n      <form style={{ display: 'flex', justifyContent: 'center' }}>\r\n        <TextField\r\n          fullWidth\r\n          label='Email'\r\n          type='email'\r\n          variant='standard'\r\n          name='email'\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          className={classes.inputField}\r\n        />\r\n      </form>\r\n      <StyledButton onClick={handleSubmit} type='submit'>\r\n        Send\r\n      </StyledButton>\r\n    </HiddenForm>\r\n  )\r\n}\r\n\r\nexport default ResetPasswordForm\r\n","import React from 'react'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport { IconButton, Toolbar } from '@material-ui/core'\r\n\r\nconst ModalToolbar = ({ handleClsoe }) => {\r\n  return (\r\n    <Toolbar>\r\n      <IconButton\r\n        edge='start'\r\n        color='inherit'\r\n        onClick={handleClsoe}\r\n        aria-label='close'\r\n      >\r\n        <CloseIcon />\r\n      </IconButton>\r\n    </Toolbar>\r\n  )\r\n}\r\n\r\nexport default ModalToolbar\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  TextField,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  modalState,\r\n  closeLoginModal,\r\n  openRegisterModal,\r\n} from '../../redux/reducers/modalSlice'\r\nimport styles from '../../styles'\r\nimport { login } from '../../redux/actions/authActions'\r\nimport { authState } from '../../redux/reducers/authSlice'\r\nimport Cookies from 'universal-cookie'\r\nimport ResetPasswordForm from '../ResetPasswordForm'\r\nimport { mapState } from '../../redux/reducers/mapSlice'\r\nimport ModalToolbar from './ModalToolbar'\r\n\r\nconst Login = () => {\r\n  const cookies = new Cookies()\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n\r\n  //states\r\n  const modals = useSelector(modalState)\r\n  const auth = useSelector(authState)\r\n  const map = useSelector(mapState)\r\n  const { loginModal } = modals\r\n  const { user, loading, message } = auth\r\n  const { windowWidth } = map\r\n\r\n  const [values, setValues] = useState({\r\n    username: '',\r\n    password: '',\r\n  })\r\n\r\n  const { username, password } = values\r\n\r\n  const [showPasswordReset, setShowPasswordReset] = useState(false)\r\n\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  const handleClsoe = () => {\r\n    dispatch(closeLoginModal())\r\n  }\r\n\r\n  const handleModalSwitch = () => {\r\n    dispatch(closeLoginModal())\r\n    dispatch(openRegisterModal())\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    dispatch(login(values))\r\n  }\r\n\r\n  if (message === 'Logged in succefully') {\r\n    cookies.set('user', user)\r\n    handleClsoe()\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      onClose={handleClsoe}\r\n      open={loginModal}\r\n      fullScreen={windowWidth < 600}\r\n    >\r\n      {windowWidth < 600 && <ModalToolbar handleClsoe={handleClsoe} />}\r\n\r\n      <DialogTitle>\r\n        <Typography variant='h6' align='center'>\r\n          Login\r\n        </Typography>\r\n      </DialogTitle>\r\n\r\n      <div>\r\n        <form className={classes.flexCenter} onSubmit={handleSubmit}>\r\n          <TextField\r\n            fullWidth\r\n            label='Username'\r\n            name='username'\r\n            value={username}\r\n            type='text'\r\n            variant='standard'\r\n            onChange={handleChange}\r\n            className={classes.inputField}\r\n          />\r\n\r\n          <TextField\r\n            fullWidth\r\n            label='Password'\r\n            type='password'\r\n            variant='standard'\r\n            name='password'\r\n            value={password}\r\n            onChange={handleChange}\r\n            className={classes.inputField}\r\n          />\r\n\r\n          <Button\r\n            variant='contained'\r\n            color='primary'\r\n            type='submit'\r\n            className={classes.popupButton}\r\n          >\r\n            {loading ? 'Loading...' : 'Login'}\r\n          </Button>\r\n        </form>\r\n        <p className={classes.inputField}>\r\n          Don't have an account?\r\n          <span onClick={handleModalSwitch} className={classes.modalLink}>\r\n            Register\r\n          </span>\r\n        </p>\r\n\r\n        <p className={classes.inputField}>\r\n          Can't login? click\r\n          <span\r\n            onClick={() => setShowPasswordReset(!showPasswordReset)}\r\n            className={classes.modalLink}\r\n          >\r\n            Here\r\n          </span>\r\n        </p>\r\n      </div>\r\n\r\n      <ResetPasswordForm show={showPasswordReset} />\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  TextField,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  modalState,\r\n  closeRegisterModal,\r\n  openLoginModal,\r\n} from '../../redux/reducers/modalSlice'\r\nimport styles from '../../styles'\r\nimport { register } from '../../redux/actions/authActions'\r\nimport { authState } from '../../redux/reducers/authSlice'\r\nimport ModalToolbar from './ModalToolbar'\r\nimport { mapState } from '../../redux/reducers/mapSlice'\r\n\r\nconst Register = () => {\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n\r\n  //state\r\n  const modals = useSelector(modalState)\r\n  const auth = useSelector(authState)\r\n  const { registerModal } = modals\r\n  const { message, loading } = auth\r\n\r\n  //local state\r\n  const [values, setValues] = useState({\r\n    username: '',\r\n    password: '',\r\n    email: '',\r\n  })\r\n\r\n  const { username, password, email } = values\r\n\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  const handleClsoe = () => {\r\n    dispatch(closeRegisterModal())\r\n  }\r\n\r\n  const handleModalSwitch = () => {\r\n    dispatch(closeRegisterModal())\r\n    dispatch(openLoginModal())\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    dispatch(register(values))\r\n  }\r\n\r\n  if (message) {\r\n    handleClsoe()\r\n  }\r\n\r\n  const map = useSelector(mapState)\r\n  const { windowWidth } = map\r\n\r\n  return (\r\n    <Dialog\r\n      onClose={handleClsoe}\r\n      open={registerModal}\r\n      fullScreen={windowWidth < 600}\r\n    >\r\n      {windowWidth < 600 && <ModalToolbar handleClsoe={handleClsoe} />}\r\n\r\n      <DialogTitle>\r\n        <Typography variant='h6' align='center'>\r\n          Register\r\n        </Typography>\r\n      </DialogTitle>\r\n\r\n      <div>\r\n        <form className={classes.flexCenter} onSubmit={handleSubmit}>\r\n          <TextField\r\n            fullWidth\r\n            label='Username'\r\n            type='text'\r\n            variant='standard'\r\n            name='username'\r\n            value={username}\r\n            onChange={handleChange}\r\n            className={classes.inputField}\r\n          />\r\n\r\n          <TextField\r\n            fullWidth\r\n            label='Email'\r\n            type='email'\r\n            variant='standard'\r\n            name='email'\r\n            value={email}\r\n            onChange={handleChange}\r\n            className={classes.inputField}\r\n          />\r\n\r\n          <TextField\r\n            fullWidth\r\n            label='Password'\r\n            type='password'\r\n            variant='standard'\r\n            name='password'\r\n            value={password}\r\n            onChange={handleChange}\r\n            className={classes.inputField}\r\n          />\r\n\r\n          <Button\r\n            variant='contained'\r\n            color='primary'\r\n            type='submit'\r\n            className={classes.popupButton}\r\n          >\r\n            {loading ? 'Loading...' : 'Register'}\r\n          </Button>\r\n        </form>\r\n        <p className={classes.inputField}>\r\n          Already have account?\r\n          <span onClick={handleModalSwitch} className={classes.modalLink}>\r\n            Login\r\n          </span>\r\n        </p>\r\n      </div>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default Register\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nconst styles = makeStyles((theme) => ({\r\n  commentsDiv: {\r\n    maxHeight: '350px',\r\n    overflowY: 'auto',\r\n    padding: theme.spacing(1),\r\n    margin: theme.spacing(1, 0),\r\n  },\r\n\r\n  imagesDiv: {\r\n    maxHeight: '500px',\r\n    overflowY: 'auto',\r\n    width: '100%',\r\n    padding: theme.spacing(1),\r\n    margin: theme.spacing(1, 0),\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n\r\n  imgDiv: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    padding: '5px',\r\n  },\r\n\r\n  img: {\r\n    margin: '5px auto',\r\n    maxWidth: '95%',\r\n    '&:hover': {\r\n      cursor: 'auto',\r\n    },\r\n  },\r\n\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n\r\n  badge: {\r\n    position: 'relative',\r\n    marginRight: '15px',\r\n    display: 'flex',\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n\r\n  header: {\r\n    margin: theme.spacing(4, 0),\r\n  },\r\n}))\r\n\r\nexport default styles\r\n","import React from 'react'\r\nimport moment from 'moment'\r\nimport { Paper, Typography } from '@material-ui/core'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport { Icon } from '../styled'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { removeComment } from '../redux/actions/markerActions'\r\nimport { authState } from '../redux/reducers/authSlice'\r\nimport { mapState } from '../redux/reducers/mapSlice'\r\n\r\nconst Comment = ({ comment }) => {\r\n  const { body, postedBy, createdAt, createdBy, _id } = comment\r\n\r\n  const auth = useSelector(authState)\r\n  const map = useSelector(mapState)\r\n\r\n  const { pinId } = map\r\n  const { user } = auth\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const myConfirm = () => {\r\n    if (window.confirm('Are you sure you wnat to delete this message?')) {\r\n      return dispatch(removeComment({ pinId, commentId: _id }))\r\n    }\r\n    return\r\n  }\r\n\r\n  return (\r\n    <Paper style={{ marginBottom: '15px', padding: '5px' }} elevation={3}>\r\n      <Typography variant='h6'>{`${postedBy}'s comment:`}</Typography>\r\n      <Typography style={{ margin: '5px 0' }} variant='subtitle1'>\r\n        {body}\r\n      </Typography>\r\n      <Typography variant='subtitle1' style={{ color: 'GrayText' }}>\r\n        {moment(createdAt).format('MMMM Do YYYY')}\r\n        {user?._id === createdBy && (\r\n          <Icon onClick={myConfirm} color={'crimson'}>\r\n            <DeleteIcon />\r\n          </Icon>\r\n        )}\r\n      </Typography>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default Comment\r\n","import { TextField } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport { StyledButton } from '../../styled'\r\nimport styles from '../../styles'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { createComment } from '../../redux/actions/markerActions'\r\nimport { mapState } from '../../redux/reducers/mapSlice'\r\n\r\nconst CommentForm = () => {\r\n  const classes = styles()\r\n  const [comment, setComment] = useState('')\r\n  const dispatch = useDispatch()\r\n\r\n  const state = useSelector(mapState)\r\n  const { pinId } = state\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    dispatch(createComment({ pinId, body: comment }))\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <TextField\r\n        className={classes.inputField}\r\n        type='text'\r\n        placeholder='Comment'\r\n        value={comment}\r\n        onChange={(e) => setComment(e.target.value)}\r\n      />\r\n      <StyledButton type='submit' primary>\r\n        Submit\r\n      </StyledButton>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default CommentForm\r\n","import React, { useState } from 'react'\r\nimport { StyledButton } from '../../styled'\r\nimport Resizer from 'react-image-file-resizer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addImages } from '../../redux/actions/cloudinaryActions'\r\nimport { mapState } from '../../redux/reducers/mapSlice'\r\nimport { returnError } from '../../redux/reducers/cloudinarySlice'\r\n\r\nconst ImagesUpload = () => {\r\n  const dispatch = useDispatch()\r\n  const [files, setFiles] = useState('')\r\n\r\n  const state = useSelector(mapState)\r\n  const { pinId, loading } = state\r\n\r\n  const handleChange = (e) => {\r\n    setFiles(e.target.files)\r\n  }\r\n\r\n  const dispatchImageUpload = async (uri) => {\r\n    await dispatch(addImages({ image: uri, pinId }))\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n\r\n    if (files.length > 3) {\r\n      return dispatch(\r\n        returnError(`Please don't uplaod more than 3 images at once.`)\r\n      )\r\n    }\r\n\r\n    if (files) {\r\n      for (let i = 0; i < files.length; i++) {\r\n        Resizer.imageFileResizer(\r\n          files[i],\r\n          500,\r\n          500,\r\n          'auto',\r\n          100,\r\n          0,\r\n          (uri) => {\r\n            dispatchImageUpload(uri)\r\n          },\r\n          'base64'\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        style={{\r\n          fontSize: '15px',\r\n          display: 'flex',\r\n          padding: '10px 20px',\r\n        }}\r\n        type='file'\r\n        accept='image/*'\r\n        name='imagetoUpload'\r\n        multiple\r\n        onChange={handleChange}\r\n      />\r\n\r\n      <StyledButton primary>{loading ? 'Loading...' : 'Submit'}</StyledButton>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default ImagesUpload\r\n","import { FormControl, InputLabel, MenuItem, Select } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport styles from '../../styles'\r\nimport { StyledButton } from '../../styled'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addRating } from '../../redux/actions/markerActions'\r\nimport { mapState } from '../../redux/reducers/mapSlice'\r\n\r\nconst AddRating = () => {\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n  const [rating, setRating] = useState('')\r\n\r\n  const map = useSelector(mapState)\r\n  const { pinId } = map\r\n\r\n  const handleChange = (e) => {\r\n    setRating(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    dispatch(addRating({ pinId, value: rating }))\r\n  }\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <FormControl>\r\n        <InputLabel id='demo-simple-select-label'>Rate</InputLabel>\r\n        <Select\r\n          className={classes.inputField}\r\n          labelId='demo-simple-select-label'\r\n          id='demo-simple-select'\r\n          value={rating}\r\n          onChange={handleChange}\r\n        >\r\n          <MenuItem value={1}>1</MenuItem>\r\n          <MenuItem value={2}>2</MenuItem>\r\n          <MenuItem value={3}>3</MenuItem>\r\n          <MenuItem value={4}>4</MenuItem>\r\n          <MenuItem value={5}>5</MenuItem>\r\n        </Select>\r\n\r\n        <StyledButton type='submit' primary>\r\n          Submit\r\n        </StyledButton>\r\n      </FormControl>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default AddRating\r\n","import React, { useState } from 'react'\r\nimport { FlexDiv, HiddenDiv, StyledButton } from '../styled'\r\nimport CommentForm from './tabs/CommentForm'\r\nimport ImagesUpload from './tabs/ImagesUpload'\r\nimport { useSelector } from 'react-redux'\r\nimport { authState } from '../redux/reducers/authSlice'\r\nimport { Typography } from '@material-ui/core'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport AddRating from './tabs/AddRating'\r\n\r\nconst TabsMenu = () => {\r\n  const [value, setValue] = useState(0)\r\n  const auth = useSelector(authState)\r\n  const { user } = auth\r\n\r\n  const handleClick = (e) => {\r\n    setValue(e.target.value)\r\n  }\r\n  return (\r\n    <FlexDiv>\r\n      {!user ? (\r\n        <Typography\r\n          style={{ margin: '10px 0', padding: '10px', color: 'GrayText' }}\r\n          variant='subtitle1'\r\n        >\r\n          Only logged in users are able to add comments/photos/rating.\r\n        </Typography>\r\n      ) : (\r\n        <>\r\n          <div>\r\n            <StyledButton onClick={handleClick} value={1}>\r\n              Add comment\r\n            </StyledButton>\r\n            <StyledButton onClick={handleClick} value={2}>\r\n              Add photo\r\n            </StyledButton>\r\n            <StyledButton onClick={handleClick} value={3}>\r\n              Add rating\r\n            </StyledButton>\r\n          </div>\r\n          <Divider></Divider>\r\n        </>\r\n      )}\r\n\r\n      <div>\r\n        <HiddenDiv value={value} number={1}>\r\n          <CommentForm />\r\n        </HiddenDiv>\r\n        <HiddenDiv value={value} number={2}>\r\n          <ImagesUpload />\r\n        </HiddenDiv>\r\n        <HiddenDiv value={value} number={3}>\r\n          <AddRating />\r\n        </HiddenDiv>\r\n      </div>\r\n    </FlexDiv>\r\n  )\r\n}\r\n\r\nexport default TabsMenu\r\n","import {\r\n  Backdrop,\r\n  Badge,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogTitle,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { mapState, resetPinId } from '../../redux/reducers/mapSlice'\r\nimport {\r\n  getComments,\r\n  getPin,\r\n  getRating,\r\n  removeMarker,\r\n} from '../../redux/actions/markerActions'\r\nimport styles from './styles'\r\nimport Comment from '../Comment'\r\nimport TabsMenu from '../Tabs'\r\nimport { getImages, removeImage } from '../../redux/actions/cloudinaryActions'\r\nimport { cloudinaryState } from '../../redux/reducers/cloudinarySlice'\r\nimport { authState } from '../../redux/reducers/authSlice'\r\nimport Rating from '@material-ui/lab/Rating'\r\nimport { StyledButton } from '../../styled'\r\nimport ModalToolbar from './ModalToolbar'\r\n\r\nconst PinModel = () => {\r\n  const classes = styles()\r\n  const map = useSelector(mapState)\r\n  const auth = useSelector(authState)\r\n  const cloudinary = useSelector(cloudinaryState)\r\n\r\n  const { pinId, loading, currentPin, comments, rating, windowWidth } = map\r\n  const { user } = auth\r\n  const { loading: loadingImages, images } = cloudinary\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => pinId !== null && dispatch(getPin(pinId)), [pinId])\r\n  useEffect(() => pinId !== null && dispatch(getComments(pinId)), [pinId])\r\n  useEffect(() => pinId !== null && dispatch(getImages(pinId)), [pinId])\r\n  useEffect(() => pinId !== null && dispatch(getRating(pinId)), [pinId])\r\n\r\n  const ratingAverage = function () {\r\n    const values = rating.map((r) => r.value)\r\n    const reducer = (accumulator, currentValue) => accumulator + currentValue\r\n    const total = values.reduce(reducer)\r\n    const result = total / values.length\r\n    return result\r\n  }\r\n\r\n  const confirmDeleteMarker = async () => {\r\n    if (window.confirm('Are you sure you wnat to delete this marker?')) {\r\n      await dispatch(removeMarker(pinId))\r\n      dispatch(resetPinId())\r\n    }\r\n  }\r\n\r\n  return loading || loadingImages ? (\r\n    <Backdrop className={classes.backdrop} open={loading || loadingImages}>\r\n      <CircularProgress color='inherit' />\r\n    </Backdrop>\r\n  ) : (\r\n    <Dialog\r\n      onClose={() => dispatch(resetPinId())}\r\n      open={pinId}\r\n      fullScreen={windowWidth < 600}\r\n    >\r\n      {windowWidth < 600 && (\r\n        <ModalToolbar handleClsoe={() => dispatch(resetPinId())} />\r\n      )}\r\n\r\n      <DialogTitle className={classes.modal}>\r\n        <Typography\r\n          variant='h5'\r\n          style={{ display: 'flex', alignItems: 'center' }}\r\n        >\r\n          <span style={{ flex: 1 }}> {currentPin?.placeName}</span>\r\n\r\n          <Rating\r\n            name='simple-controlled'\r\n            value={rating && rating.length > 0 ? ratingAverage().toFixed(1) : 0}\r\n            readOnly\r\n            precision={0.5}\r\n          />\r\n          <span style={{ marginLeft: '7px' }}>\r\n            {`(${\r\n              rating && rating.length > 0\r\n                ? ratingAverage().toFixed(1)\r\n                : 'No ratings'\r\n            })`}\r\n          </span>\r\n        </Typography>\r\n\r\n        {rating && rating.length && (\r\n          <Typography\r\n            style={{ float: 'right', color: 'GrayText' }}\r\n            variant='subtitle1'\r\n          >{`from ${rating.length} ratings`}</Typography>\r\n        )}\r\n      </DialogTitle>\r\n\r\n      {/* marker deletion */}\r\n      {user && user.role === 'admin' && (\r\n        <StyledButton\r\n          style={{ width: '200px' }}\r\n          variant='contained'\r\n          fullWidth\r\n          onClick={confirmDeleteMarker}\r\n        >\r\n          Delete this marker\r\n        </StyledButton>\r\n      )}\r\n\r\n      <div className={classes.imagesDiv}>\r\n        {images?.length > 0 ? (\r\n          images.map((image, i) => (\r\n            <div className={classes.imgDiv}>\r\n              {user?._id === image.createdBy ? (\r\n                <>\r\n                  <img className={classes.img} key={i} src={image.url} />\r\n                  <Badge\r\n                    onClick={() =>\r\n                      dispatch(\r\n                        removeImage({ pinId, public_id: image.public_id })\r\n                      )\r\n                    }\r\n                    className={classes.badge}\r\n                    badgeContent={'Delete'}\r\n                    color='error'\r\n                  ></Badge>\r\n                </>\r\n              ) : (\r\n                <img className={classes.img} key={i} src={image.url} />\r\n              )}\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No images yet.</p>\r\n        )}\r\n      </div>\r\n\r\n      <div className={classes.commentsDiv}>\r\n        {comments?.length > 0 ? (\r\n          comments.map((c, i) => <Comment key={i} comment={c} />)\r\n        ) : (\r\n          <p>No comments yet.</p>\r\n        )}\r\n      </div>\r\n\r\n      <TabsMenu />\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default PinModel\r\n","import { Snackbar } from '@material-ui/core'\r\nimport React from 'react'\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { mapState, resetError } from '../../redux/reducers/mapSlice'\r\n\r\nconst MapErrorMessage = () => {\r\n  const dispatch = useDispatch()\r\n  const state = useSelector(mapState)\r\n  const { error } = state\r\n\r\n  return (\r\n    <Snackbar\r\n      open={error}\r\n      autoHideDuration={6000}\r\n      onClose={() => dispatch(resetError())}\r\n    >\r\n      <Alert onClose={() => dispatch(resetError())} severity='error'>\r\n        {error}\r\n      </Alert>\r\n    </Snackbar>\r\n  )\r\n}\r\n\r\nexport default MapErrorMessage\r\n","import { Snackbar } from '@material-ui/core'\r\nimport React from 'react'\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n  cloudinaryState,\r\n  resetError,\r\n} from '../../redux/reducers/cloudinarySlice'\r\n\r\nconst CloudinaryErrorMessage = () => {\r\n  const dispatch = useDispatch()\r\n  const cloudinary = useSelector(cloudinaryState)\r\n  const { error } = cloudinary\r\n\r\n  return (\r\n    <Snackbar\r\n      open={error}\r\n      autoHideDuration={6000}\r\n      onClose={() => dispatch(resetError())}\r\n    >\r\n      <Alert onClose={() => dispatch(resetError())} severity='error'>\r\n        {error}\r\n      </Alert>\r\n    </Snackbar>\r\n  )\r\n}\r\n\r\nexport default CloudinaryErrorMessage\r\n","import { Dialog, Typography } from '@material-ui/core'\r\nimport { closeAboutModal, modalState } from '../../redux/reducers/modalSlice'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport styles from './styles'\r\nimport { mapState } from '../../redux/reducers/mapSlice'\r\nimport ModalToolbar from './ModalToolbar'\r\n\r\nconst About = () => {\r\n  const dispatch = useDispatch()\r\n  const modal = useSelector(modalState)\r\n  const { aboutModal } = modal\r\n  const classes = styles()\r\n\r\n  const map = useSelector(mapState)\r\n  const { windowWidth } = map\r\n\r\n  const handleClsoe = () => {\r\n    dispatch(closeAboutModal())\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={aboutModal}\r\n      onClose={handleClsoe}\r\n      fullScreen={windowWidth < 600}\r\n    >\r\n      {windowWidth < 600 && <ModalToolbar handleClsoe={handleClsoe} />}\r\n\r\n      <Typography variant='h4' align='center' className={classes.header}>\r\n        Travel-App 101\r\n      </Typography>\r\n      <Typography variant='h6' align='center' style={{ padding: '7px' }}>\r\n        Have you ever wanted to share your favorite places with the world?\r\n        Comment, upload images, or rate places you have been to? now it's all\r\n        possible with Mike's travel app!\r\n      </Typography>\r\n\r\n      <div style={{ padding: '10px' }}>\r\n        <p>\r\n          1. View all the places in the world by clicking on the markers on the\r\n          map.\r\n        </p>\r\n        <p>\r\n          2. Register a new account and loggin to be able to create new markers!\r\n        </p>\r\n        <p>\r\n          3. Creating a marker is done by double clicking the map, choose a\r\n          place you want to mark and just double click it! (make sure you logged\r\n          in)\r\n        </p>\r\n        <p>\r\n          4. You can post comments ratings and images on other people's markers\r\n          as well.\r\n        </p>\r\n        <p>\r\n          5. Don't worry you can delete your comments and photos later if you\r\n          change your mind...\r\n        </p>\r\n\r\n        <p>6. Enjoy your time.</p>\r\n\r\n        <p style={{ color: 'gray', marginTop: '15px' }}>\r\n          Please note that if needed the admim can delete any marker on the map\r\n          and all the images and comments will be deleted too..\r\n        </p>\r\n      </div>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default About\r\n","import { Backdrop, Button, CircularProgress } from '@material-ui/core'\r\nimport { useEffect } from 'react'\r\nimport ReactMapGL from 'react-map-gl'\r\nimport MapMarker from './components/MapMarker'\r\nimport styles from './styles'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  setCurrentMarker,\r\n  mapState,\r\n  setViewport,\r\n} from './redux/reducers/mapSlice'\r\nimport { openLoginModal, openAboutModal } from './redux/reducers/modalSlice'\r\nimport NewMarkerPopup from './components/NewMarkerPopup'\r\nimport { getPins } from './redux/actions/markerActions'\r\nimport Login from './components/modals/Login'\r\nimport Register from './components/modals/Register'\r\nimport { authState } from './redux/reducers/authSlice'\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\r\nimport { logout } from './redux/actions/authActions'\r\nimport Cookies from 'universal-cookie'\r\nimport PinModel from './components/modals/PinModel'\r\nimport MapErrorMessage from './components/snackBars/MapErrorMessage'\r\nimport CloudinaryErrorMessage from './components/snackBars/CloudinaryErrorMessage'\r\nimport About from './components/modals/About'\r\nimport 'mapbox-gl/dist/mapbox-gl.css'\r\n\r\nfunction Map() {\r\n  const dispatch = useDispatch()\r\n  const classes = styles()\r\n  const cookies = new Cookies()\r\n\r\n  //state\r\n  const state = useSelector(mapState)\r\n  const auth = useSelector(authState)\r\n  const { user, loading: authLoading } = auth\r\n\r\n  const { currentMarker, markers, viewport, loading: mapLoading } = state\r\n\r\n  const handleNewClick = (e) => {\r\n    user && dispatch(setCurrentMarker({ long: e.lngLat[0], lat: e.lngLat[1] }))\r\n  }\r\n\r\n  useEffect(() => dispatch(getPins()), [])\r\n\r\n  const handleLogout = async () => {\r\n    await dispatch(logout())\r\n    cookies.remove('user')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ReactMapGL\r\n        onDblClick={(e) => handleNewClick(e)}\r\n        {...viewport}\r\n        mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\r\n        mapStyle='mapbox://styles/mapbox/streets-v11'\r\n        onViewportChange={(nextViewport) => dispatch(setViewport(nextViewport))}\r\n      >\r\n        {currentMarker && (\r\n          <>\r\n            <MapMarker\r\n              viewport={viewport}\r\n              long={Number(currentMarker.long)}\r\n              lat={Number(currentMarker.lat)}\r\n            />\r\n            <NewMarkerPopup\r\n              long={Number(currentMarker.long)}\r\n              lat={Number(currentMarker.lat)}\r\n            />\r\n          </>\r\n        )}\r\n        {markers.length > 0 &&\r\n          markers.map((m, i) => (\r\n            <MapMarker\r\n              key={i}\r\n              viewport={viewport}\r\n              long={Number(m.long)}\r\n              lat={Number(m.lat)}\r\n              marker={m}\r\n            />\r\n          ))}\r\n\r\n        {!user ? (\r\n          <Button\r\n            className={classes.menuButton}\r\n            variant='contained'\r\n            color='primary'\r\n            onClick={() => dispatch(openLoginModal())}\r\n          >\r\n            login\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            className={classes.menuButton}\r\n            variant='contained'\r\n            color='primary'\r\n            onClick={handleLogout}\r\n            endIcon={<ExitToAppIcon />}\r\n          >\r\n            Logout\r\n          </Button>\r\n        )}\r\n\r\n        <Button\r\n          className={classes.menuButton}\r\n          variant='contained'\r\n          color='secondary'\r\n          onClick={() => dispatch(openAboutModal())}\r\n        >\r\n          About\r\n        </Button>\r\n\r\n        {/* Modals imports */}\r\n        <Login />\r\n        <Register />\r\n        <PinModel />\r\n        <About />\r\n\r\n        {/* loader */}\r\n        <Backdrop className={classes.backdrop} open={authLoading || mapLoading}>\r\n          <CircularProgress color='inherit' />\r\n        </Backdrop>\r\n\r\n        {/* errors */}\r\n        <MapErrorMessage />\r\n        <CloudinaryErrorMessage />\r\n      </ReactMapGL>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Map\r\n","import { createMuiTheme } from '@material-ui/core'\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#000000',\r\n    },\r\n    secondary: {\r\n      main: '#DC143C',\r\n    },\r\n  },\r\n})\r\n\r\nexport default theme\r\n","import {\r\n  Backdrop,\r\n  CircularProgress,\r\n  Container,\r\n  TextField,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { authState } from '../redux/reducers/authSlice'\r\nimport {\r\n  resetPasswordValidation,\r\n  createResetPassword,\r\n} from '../redux/actions/authActions'\r\nimport { useParams } from 'react-router-dom'\r\nimport styles from '../styles'\r\nimport { StyledButton, FlexDiv } from '../styled'\r\n\r\nconst PasswordReset = () => {\r\n  const classes = styles()\r\n  const dispatch = useDispatch()\r\n  const auth = useSelector(authState)\r\n  const {\r\n    resetPasswordSuccess,\r\n    resetPasswordError,\r\n    loading,\r\n    error,\r\n    message,\r\n  } = auth\r\n\r\n  const params = useParams()\r\n  const { token } = params\r\n\r\n  const [values, setvalues] = useState({\r\n    password: '',\r\n    confirmPassword: '',\r\n  })\r\n\r\n  const { password, confirmPassword } = values\r\n  const handleChange = (e) => {\r\n    setvalues({ ...values, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    await dispatch(\r\n      createResetPassword({\r\n        password,\r\n        confirmPassword,\r\n        resetPasswordToken: token,\r\n      })\r\n    )\r\n  }\r\n\r\n  const displayError = () => {\r\n    if (error) {\r\n      return (\r\n        <Typography\r\n          variant='subtitle1'\r\n          align='center'\r\n          style={{ margin: '20px 0', color: 'red' }}\r\n        >\r\n          {error}\r\n        </Typography>\r\n      )\r\n    }\r\n  }\r\n\r\n  const displaySuccess = () => {\r\n    if (message) {\r\n      return (\r\n        <Typography\r\n          variant='subtitle1'\r\n          align='center'\r\n          style={{ margin: '20px 0', color: 'green' }}\r\n        >\r\n          {message}\r\n        </Typography>\r\n      )\r\n    }\r\n  }\r\n\r\n  useEffect(() => dispatch(resetPasswordValidation(token)), [])\r\n\r\n  return (\r\n    <div>\r\n      <Container maxWidth='sm'>\r\n        <Typography variant='h5' align='center' style={{ margin: '20px 0' }}>\r\n          Reset password page\r\n        </Typography>\r\n\r\n        {loading && (\r\n          <Backdrop className={classes.backdrop} open={loading}>\r\n            <CircularProgress color='inherit' />\r\n          </Backdrop>\r\n        )}\r\n\r\n        {resetPasswordSuccess && (\r\n          <form onSubmit={handleSubmit}>\r\n            <FlexDiv>\r\n              <Typography\r\n                variant='subtitle1'\r\n                align='center'\r\n                style={{ margin: '20px 0', color: 'green' }}\r\n              >\r\n                {resetPasswordSuccess}\r\n              </Typography>\r\n\r\n              <TextField\r\n                fullWidth\r\n                label='New Password'\r\n                type='password'\r\n                variant='standard'\r\n                name='password'\r\n                value={password}\r\n                onChange={handleChange}\r\n                className={classes.inputField}\r\n              />\r\n\r\n              <TextField\r\n                fullWidth\r\n                label='Confirm Password'\r\n                type='password'\r\n                variant='standard'\r\n                name='confirmPassword'\r\n                value={confirmPassword}\r\n                onChange={handleChange}\r\n                className={classes.inputField}\r\n              />\r\n\r\n              <StyledButton\r\n                style={{ margin: '20px auto' }}\r\n                primary\r\n                type='submit'\r\n              >\r\n                Submit\r\n              </StyledButton>\r\n            </FlexDiv>\r\n          </form>\r\n        )}\r\n\r\n        {displayError()}\r\n        {displaySuccess()}\r\n\r\n        {resetPasswordError && (\r\n          <Typography\r\n            variant='subtitle1'\r\n            align='center'\r\n            style={{ margin: '20px 0', color: 'red' }}\r\n          >\r\n            {resetPasswordError}\r\n          </Typography>\r\n        )}\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PasswordReset\r\n","import { ThemeProvider } from '@material-ui/styles'\r\nimport React, { useEffect } from 'react'\r\nimport SuccessMessage from './components/snackBars/SuccessMessage'\r\nimport ErrorMessage from './components/snackBars/ErrorMessage'\r\nimport Map from './Map'\r\nimport theme from './theme'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport PasswordReset from './pages/PasswordReset'\r\nimport { useDispatch } from 'react-redux'\r\nimport { windowResizer } from './redux/reducers/mapSlice'\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const handleResize = () => {\r\n    return dispatch(windowResizer(window.innerWidth))\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', handleResize)\r\n    return () => window.removeEventListener('resize', handleResize)\r\n  }, [])\r\n\r\n  return (\r\n    <Router>\r\n      <ThemeProvider theme={theme}>\r\n        <Switch>\r\n          <Route path='/' exact component={Map} />\r\n          <Route\r\n            path='/password-reset/:token'\r\n            exact\r\n            component={PasswordReset}\r\n          />\r\n        </Switch>\r\n\r\n        <SuccessMessage />\r\n        <ErrorMessage />\r\n      </ThemeProvider>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { store } from './redux/store'\nimport { Provider } from 'react-redux'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}